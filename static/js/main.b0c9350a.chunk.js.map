{"version":3,"sources":["logo.svg","containers/ProductCategoryRow.js","containers/ProductRow.js","containers/ProductTable.js","containers/SearchBar.js","containers/FilterableProductTable.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","ProductCategoryRow","react_default","a","createElement","colSpan","this","props","title","Component","ProductTable","style","stocked","color","name","price","headerRow","colHeaders","map","colName","key","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","handleInputChange","bind","assertThisInitialized","event","target","value","type","checked","onSearch","defineProperty","className","searchTxt","onChange","onlyInStock","FilterableProductTable","state","sourceProducts","products","search","query","_query","assign","lowerSearchTxt","toLowerCase","setState","objectSpread","filter","product","category","indexOf","_this2","fetch","then","response","json","data","catch","err","console","log","productCategoryList","reduce","categoryList","_ref","concat","tableBody","keys","forEach","productRows","ProductRow_ProductTable","push","ProductCategoryRow_ProductCategoryRow","SearchBar_ProductCategoryRow","ProductTable_ProductTable","App","src","logo","alt","href","rel","FilterableProductTable_FilterableProductTable","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.b0c9350a.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React, { Component } from 'react';\n\nexport default class ProductCategoryRow extends Component {\n  render() {\n    return (\n      <tr>\n        <td colSpan=\"2\">{this.props.title}</td>\n      </tr>\n    );\n  }\n}","import React, { Component } from 'react';\n\nexport default class ProductTable extends Component {\n  render() {\n    return (\n      <tr>\n        <td style={!this.props.stocked ? {color: 'red'} : {}}>{this.props.name}</td>\n        <td>{this.props.price}</td>\n      </tr>\n    );\n  }\n}","import React, { Component } from 'react';\n\nexport default class ProductTable extends Component {\n  render() {\n    const headerRow = this.props.colHeaders.map(colName => (<th key={colName}>{colName}</th>))\n    return (\n      <tr>\n        {headerRow}\n      </tr>\n    );\n  }\n}","import React, { Component } from 'react';\nimport './SearchBar.css'\n\nexport default class ProductCategoryRow extends Component {\n  constructor (props) {\n    super(props);\n    this.handleInputChange = this.handleInputChange.bind(this);\n  }\n\n  handleInputChange(event) {\n    const target = event.target;\n    const value = target.type === 'checkbox' ? target.checked : target.value;\n    const name = target.name;\n    this.props.onSearch({\n      [name]: value\n    })\n  }\n\n  render() {\n    return (\n      <div className=\"search-Bar\">\n        <div className=\"search-Bar__input\">\n          <input\n            name=\"searchTxt\"\n            type=\"text\"\n            value={this.props.searchTxt}\n            onChange={this.handleInputChange} />\n        </div>\n        <div className=\"search-Bar__additional\">\n          <input\n            name=\"onlyInStock\"\n            type=\"checkbox\"\n            value={this.props.onlyInStock}\n            onChange={this.handleInputChange} />\n          <span>Only show products in stock</span>\n        </div>\n      </div>\n    );\n  }\n}","import React, { Component } from 'react';\nimport ProductCategoryRow from './ProductCategoryRow';\nimport ProductRow from './ProductRow';\nimport ProductTable from './ProductTable';\nimport SearchBar from './SearchBar';\nimport './FilterableProductTable.css';\n\nexport default class FilterableProductTable extends Component {\n  constructor (props) {\n    super(props);\n    this.state = {\n      sourceProducts: [],\n      products: [],\n      searchTxt: '',\n      onlyInStock: false\n    }\n    this.search = this.search.bind(this);\n  }\n\n  search (query) {\n    const _query = Object.assign({\n      searchTxt: this.state.searchTxt,\n      onlyInStock: this.state.onlyInStock\n    }, query)\n    const lowerSearchTxt = _query.searchTxt.toLowerCase()\n    this.setState({\n      ..._query,\n      products: this.state.sourceProducts.filter(product => \n        (product.category.toLowerCase().indexOf(lowerSearchTxt) > -1 || product.name.toLowerCase().indexOf(lowerSearchTxt) > -1) && (!_query.onlyInStock || product.stocked)\n      )\n    })\n  }\n\n  componentDidMount() {\n    fetch('./products.json').then(response => {\n        return response.json()\n      })\n      .then(data => {\n        this.setState({\n          sourceProducts: data.products,\n          products: data.products\n        })\n        this.search()\n      }).catch(err => {\n        console.log('Error Reading data ' + err);\n      })\n  }\n\n  render() {\n    const productCategoryList = this.state.products.reduce((categoryList, {category, price, stocked, name}) => {\n      if (!categoryList[category]) {\n        categoryList[category] = [\n          {price, stocked, name}\n        ]\n      } else {\n        categoryList[category] = categoryList[category].concat({price, stocked, name})\n      }\n      return categoryList\n    }, {})\n    let tableBody = [];\n    Object.keys(productCategoryList).forEach(category => {\n      const productRows = productCategoryList[category].map(product => \n        (<ProductRow key={product.name} stocked={product.stocked} name={product.name} price={product.price} />)\n      )\n      tableBody.push(<ProductCategoryRow  key={category} title={category} />)\n      tableBody = tableBody.concat(productRows)\n    })\n\n    return (\n      <div>\n        <SearchBar searchTxt={this.state.searchTxt} onlyInStock={this.state.onlyInStock} onSearch={this.search} />\n        <table>\n          <tbody>\n            <ProductTable colHeaders={['name', 'price']}/>\n            {tableBody}\n          </tbody>\n        </table>\n      </div>\n    );\n  }\n\n}","import React from 'react';\nimport FilterableProductTable from './containers/FilterableProductTable.js';\nimport logo from './logo.svg';\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo-1\" />\n        <p>\n          Edit <code>src/App.js</code> and save to reload.\n        </p>\n        <a\n          className=\"App-link\"\n          href=\"https://reactjs.org\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Learn React\n        </a>\n      </header>\n      <div className=\"App-body\">\n        <FilterableProductTable />\n      </div>\n    </div>\n  );\n}\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}